 // Condition pour voir si le jour d'imputation tombe un jour férié
                for($i=0; $i<5; $i++) {
                    $dateImputation = new DateTime($donnees->tableauimput[$j]->date[$i]);
                    $annee = $dateImputation->format('Y');
                    $dateImputVerif = $dateImputation->format('Y-m-d');

                    $collab = $userRepository->find($donnees->tableauimput[$j]->user);
                    $lieu = $collab->getSite();
                    $lieuArray = explode(', ',$lieu);
                    $pays = end($lieuArray);

                    $joursFeries = $this->getJoursFeries($pays, $annee);

                    $existeABS = 0;

                    // Vérification si la date d'imputation est un jour férié
                    if (array_key_exists($dateImputVerif, $joursFeries)) {
                        if($existeABS == 0) {
                            $imput->setUser($user);
                            $imput->setCommentaire("Férié: ".$dateImputVerif);
                            $em = $this->getDoctrine()->getManager();
                            $em->persist($imput);

                            $donnees->tableauimput[$j]->valeur[$i] = 1;

                            $CodeAbsence = $codeProjetRepository->findCodeAbsence();
                            
                            $IDCode = $CodeAbsence->getId();
                            $domaine = $collab->getProjet()->getLibelle();
                            $TacheAbsence = $tachesrepository->findTacheAbsence($IDCode, $domaine);
                            $ActiviteAbsence = $activiteRepository->findActiviteAbsence();

                            $dateV = new DateV;
                            $dateV->setImput($imput);
                            $dateV->setValeur($donnees->tableauimput[$j]->valeur[$i]);
                            $dateV->setDate(new DateTime($donnees->tableauimput[$j]->date[$i]));
                            $dateV->setTache($TacheAbsence);
                            $dateV->setCodeprojet($CodeAbsence);
                            $dateV->setActivite($ActiviteAbsence);
                            $charge_imput += $donnees->tableauimput[$j]->valeur[$i];
                            $em->persist($dateV);

                            $existeABS = 1;
                        }else{
                            $donnees->tableauimput[$j]->valeur[$i] = 0;
                        }
                    }
                    //création de l'imput
                    $imput->setUser($user);
                    $imput->setCommentaire($donnees->tableauimput[$j]->Commentaires);
                    $em = $this->getDoctrine()->getManager();
                    $em->persist($imput);

                    //Création des données
                    $dateV = new DateV;
                    $dateV->setImput($imput);
                    $dateV->setValeur($donnees->tableauimput[$j]->valeur[$i]);
                    $dateV->setDate(new DateTime($donnees->tableauimput[$j]->date[$i]));
                    $dateV->setTache($tache);
                    $dateV->setCodeprojet($codeP);
                    $dateV->setActivite($activite);
                    $charge_imput += $donnees->tableauimput[$j]->valeur[$i];
                    $em->persist($dateV);
                }
