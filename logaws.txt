public function apiedit(TachesRepository $tachesrepository, DateVRepository $dateVRepository, Request $request)
{
    $donnees = json_decode($request->getContent());
    $dateVlistes = $dateVRepository->findAll();
    $modif = false;

    // Collecter les modifications dans des tableaux temporaires
    $modificationsDateV = [];
    $modificationsImput = [];

    foreach ($donnees->tableaumodif as $tab) {
        foreach ($dateVlistes as $dateVliste) {
            if ($tab->imputID == $dateVliste->getImput()->getId()) {
                if (isset($tab->valeur) && $tab->valeur != $dateVliste->getValeur()) {
                    $modificationsDateV[] = ['dateV' => $dateVliste, 'nouvelleValeur' => $tab->valeur];
                    $modif = true;
                }
            }
        }

        if (isset($tab->Commentaires)) {
            foreach ($dateVlistes as $listeD) {
                if ($tab->imputID == $listeD->getImput()->getId() && $tab->Commentaires != $listeD->getImput()->getCommentaire()) {
                    $modificationsImput[] = ['imput' => $listeD->getImput(), 'nouveauCommentaire' => $tab->Commentaires];
                    $modif = true;
                    break; // Sortir de la boucle dès qu'un changement est détecté
                }
            }
        }
    }

    if ($modif) {
        $em = $this->getDoctrine()->getManager();

        // Appliquer les modifications
        foreach ($modificationsDateV as $modifDateV) {
            $modifDateV['dateV']->setValeur($modifDateV['nouvelleValeur']);
            $em->persist($modifDateV['dateV']);
        }

        foreach ($modificationsImput as $modifImput) {
            $modifImput['imput']->setCommentaire($modifImput['nouveauCommentaire']);
            $em->persist($modifImput['imput']);
        }

        $em->flush();
        return new Response(200); // Succès
    } else {
        return new Response(0); // Aucune modification
    }
}
