public function exportmoisAction(DateVRepository $dateVRepository, ImputRepository $imputRepository, Request $request)
{
    $donnees = json_decode($request->getContent());

    // Récupération de toutes les imputations pour le mois donné
    $dateVs = $dateVRepository->findByMonth($donnees->dates[0]); // Supposons que findByMonth() est une méthode personnalisée pour récupérer les imputations par mois

    // Initialisation des variables
    $tabexport = [];
    $list = [
        ['CENTRE_DE_COUT_RESSOURCE', 'STRUCTURE_BT_RESSOURCE', 'INTERNE_/_EXTERNE', 'NOM_RESSOURCE', 'LOGIN_RESSOURCE', 'RESSOURCE_CS_RESSOURCE', 'RESSOURCE_CS_FOURNISSEUR', 'TYPE_DE_PROJET', 'NOM_PROJET', 'CC_PORTEUR_PROJET', 'STATUT_PROJET', 'CHEF_DE_PROJET', 'CODE_TACHE', 'DESCRIPTION_TACHE', 'JIRA', 'TYPE_ACTIVITE', 'ID-MOE', 'ANNEE', 'TYPE_IMPUTATION', 'SEMAINE', 'TOTAL', 'COMMENT_SEMAINE', 'COMMENT_MOIS', 'no_semaine', 'Coût unitaire', 'Montant', 'Charge DEV', 'Charge Testeur', 'Charge Analyste', 'Charge Pilotage', 'Charge architecte', 'Concat'],
    ];
    $i = 0;

    // Parcourir toutes les imputations
    foreach ($dateVs as $dateV) {
        // Récupérer la semaine et le mois de la date de l'imputation
        $weeknumber = $dateV->getDate()->format("W");
        $moisBase = $dateV->getDate()->format('Y-m');

        // Calculer le total par semaine
        $Timputsemaine = $dateV->getValeur();

        // Ajouter la ligne d'exportation avec les informations de l'imputation
        $tabexport[$i] = [
            // Informations de l'imputation
            '...',
            // Informations sur la semaine et le total
            $weeknumber,
            number_format($Timputsemaine, 2, ',', ' '),
            // Autres informations...
        ];

        // Incrémenter l'index pour la prochaine ligne d'exportation
        $i++;
    }

    // Ajouter les lignes d'exportation au tableau
    foreach ($tabexport as $fields) {
        $list[] = $fields;
    }

    // Générer le fichier CSV
    $fp = fopen('php://temp', 'w+');
    foreach ($list as $fields) {
        fputcsv($fp, $fields);
    }
    rewind($fp);

    // Créer la réponse HTTP avec le contenu du fichier CSV
    $response = new Response(stream_get_contents($fp));
    fclose($fp);

    // Définir les en-têtes de la réponse
    $response->headers->set('Content-Type', 'text/csv', 'charset=UTF-8');
    $response->headers->set('Content-Disposition', 'attachment; filename="testing.csv"');

    return $response;
}
