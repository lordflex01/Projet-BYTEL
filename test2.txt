 $(document).on("click", "#save", function () {
    var parseDates = (inp) => {
      let year = parseInt(inp.slice(0, 4), 10);
      let week = parseInt(inp.slice(6), 10);

      let day = 1 + (week - 0) * 7; // 1st of January + 7 days for each week

      let dayOffset = new Date(year, 0, 1).getDay(); // we need to know at what day of the week the year start

      if (dayOffset == 0) {
        dayOffset = 6;
      } else if (dayOffset == 1) {
        dayOffset = 7;
      } else {
        dayOffset--;
      }

      let days = [];
      for (let i = 0; i < 7; i++)
        days.push(new Date(year, 0, day - dayOffset + i));
      // add a new Date object to the array with an offset of i days relative to the first day of the week
      return days;
    };
    ////////////////////////////DEBUT MODIFICATION/////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    var tableaumodif = [];
    var tabcumuleimputM = [];
    (tabcumuleimputM[0] = 0),
      (tabcumuleimputM[1] = 0),
      (tabcumuleimputM[2] = 0),
      (tabcumuleimputM[3] = 0),
      (tabcumuleimputM[4] = 0);

    for (let i = 0; i < imputID.length; i++) {
      let CommentairesM = $("#com" + i + "").val();
      let str1M = $("#m1" + imputID[i] + "").val();
      let str2M = $("#m2" + imputID[i] + "").val();
      let str3M = $("#m3" + imputID[i] + "").val();
      let str4M = $("#m4" + imputID[i] + "").val();
      let str5M = $("#m5" + imputID[i] + "").val();
      let valeurM = [];
      (valeurM[0] = str1M),
        (valeurM[1] = str2M),
        (valeurM[2] = str3M),
        (valeurM[3] = str4M),
        (valeurM[4] = str5M);

      (tabcumuleimputM[0] = tabcumuleimputM[0] + parseFloat(valeurM[0])),
        (tabcumuleimputM[1] = tabcumuleimputM[1] + parseFloat(valeurM[1])),
        (tabcumuleimputM[2] = tabcumuleimputM[2] + parseFloat(valeurM[2])),
        (tabcumuleimputM[3] = tabcumuleimputM[3] + parseFloat(valeurM[3])),
        (tabcumuleimputM[4] = tabcumuleimputM[4] + parseFloat(valeurM[4]));

      var modification = {
        imputID: imputID[i],
        valeur: valeurM,
        Commentaires: CommentairesM,
      };
      tableaumodif[i] = modification;
    }
    var dataM = {
      tableaumodif: tableaumodif,
      nbrmodification: imputID.length,
      tabcumuleimput: tabcumuleimputM,
    };
    ///////////////////////////FIN MODIFICATION////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    var tableauimputation = [];
    var tabcumuleimput = [];
    (tabcumuleimput[0] = 0),
      (tabcumuleimput[1] = 0),
      (tabcumuleimput[2] = 0),
      (tabcumuleimput[3] = 0),
      (tabcumuleimput[4] = 0);

    for (let i = 1; i <= compteurligneajout; i++) {
      let id = $("#name").val();
      var week = document.querySelector("#date-input");
      var dates = parseDates(week.value);
      let tacheselected = $("#tache" + i + " option:selected");
      let codePselected = $("#codeP" + i + " option:selected");
      let activiteselected = $("#activite" + i + " option:selected");
      dates[0].setHours(dates[0].getHours() + 2);
      dates[1].setHours(dates[1].getHours() + 2);
      dates[2].setHours(dates[2].getHours() + 2);
      dates[3].setHours(dates[3].getHours() + 2);
      dates[4].setHours(dates[4].getHours() + 2);
      let str1 = $("#i1" + i + "").val();
      let str2 = $("#i2" + i + "").val();
      let str3 = $("#i3" + i + "").val();
      let str4 = $("#i4" + i + "").val();
      let str5 = $("#i5" + i + "").val();
      let Commentaires = $("#i6" + i + "").val();

      let valeur = [];
      (valeur[0] = str1),
        (valeur[1] = str2),
        (valeur[2] = str3),
        (valeur[3] = str4),
        (valeur[4] = str5);
      (tabcumuleimput[0] = tabcumuleimput[0] + parseFloat(valeur[0])),
        (tabcumuleimput[1] = tabcumuleimput[1] + parseFloat(valeur[1])),
        (tabcumuleimput[2] = tabcumuleimput[2] + parseFloat(valeur[2])),
        (tabcumuleimput[3] = tabcumuleimput[3] + parseFloat(valeur[3])),
        (tabcumuleimput[4] = tabcumuleimput[4] + parseFloat(valeur[4]));

      let ligneimputation = {
        activite: activiteselected[0].value,
        tache: tacheselected[0].value,
        codeprojet: codePselected[0].value,
        valeur: valeur,
        Commentaires: Commentaires,
        date: dates,
        user: id,
        tabcumuleimput: tabcumuleimput,
        tabcumuleimputM: tabcumuleimputM,
      };

      tableauimputation[i - 1] = ligneimputation;
    }

    var data = {
      tableauimput: tableauimputation,
      nbr: compteurligneajout,
    };

    //EDIT
    $.ajax({
      url: `/apii/edit`,
      type: "POST",
      processData: false,
      contentType: false,
      data: JSON.stringify(dataM),
      dataType: "json",
      async: true,
      success: function (response) {
        if (response == 200) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({ icon: "success", title: "Modification confirmée." });
        }
        if (response == 202) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({
            icon: "error",
            title: "Une des modifications est > 1 dans une même journée !",
          });
        }
      },
      error: function (xhr, textStatus, errorThrown) {
        alert(xhr.responseText);
      },
    });

    //NEW
    $.ajax({
      url: `/apii/new`,
      type: "POST",
      processData: false,
      contentType: false,
      data: JSON.stringify(data),
      dataType: "json",
      async: true,
      success: function (response) {
        if (response == 200) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({ icon: "success", title: "Imputation confirmée." });
          $("#btnRech").click();
        }
        if (response == 201) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({
            icon: "error",
            title: "Un des couples tâche et code projet existe déjà !",
          });
        }
        if (response == 202) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({
            icon: "error",
            title: "Une des imputations est > 1 dans une même journée !",
          });
        }
        if (response.error) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });

          Toast.fire({
            icon: "error",
            title: response.error,
          });
        }
      },
      error: function (xhr, textStatus, errorThrown) {
        if (
          xhr.responseJSON.type ==
          "https://tools.ietf.org/html/rfc2616#section-10"
        ) {
          var Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 6000,
          });
          Toast.fire({
            icon: "error",
            title: "Vous avez oublié de renseigner l'une des activités !",
          });
        } else alert(xhr.responseText);
      },
    });
  });
